---
title: "In-class_Ex07: Global and Local Measures of Spatial Association - sfdep methods"
date: "20 February 2023"
date-modified: "r Sys.Date()"
execute: 
  eval: true
  echo: true
  warning: false
editor: visual
---

## Getting Started

```{r}
pacman::p_load(tidyverse, tmap, sf, sfdep, plotly)
```

## Importing Data

```{r}
hunan <- st_read(dsn = "data/geospatial",
                     layer = "Hunan")
```
```{r}
hunan2012 <- read_csv("data/aspatial/Hunan_2012.csv")
```
## Joining using left join

```{r}
hunan_GDPPC <- left_join(hunan, hunan2012) %>%
  select(1:4, 7, 15)
```
## Deriving contiguity weights: queen's method

```{r}
wm_q <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry),
         wt = st_weights(nb,
                         style = "W"),
         .before = 1)
```

#### computing global moran' I

```{r}
moranI <- global_moran(wm_q$GDPPC,
                       wm_q$nb,
                       wm_q$wt)
```

#### performing gloabl moran'I test
```{r}
global_moran_test(wm_q$GDPPC,
                  wm_q$nb,
                  wm_q$wt)
```

```{r}
set.seed(1234)
```

```{r}
global_moran_perm(wm_q$GDPPC,
                  wm_q$nb,
                  wm_q$wt,
                  nsim = 99)
```

## Computing local Moran's I
```{r}
lisa <- wm_q %>%
  mutate(local_moran= local_moran(
    GDPPC, nb, wt, nsim = 99), 
      .before = 1) %>%
  unnest(local_moran)
lisa
```

### visualising local Moran's I

```{r}
tmap_mode("plot")
tm_shape(lisa) +
  tm_fill("ii") +
  tm_borders(alpha = 0.5) +
  tm_view(set.zoom.limits = c(6,8))
```

```{r}
tmap_mode("plot")
tm_shape(lisa) +
  tm_fill("p_ii_sim") +
  tm_borders(alpha = 0.5)
```

```{r}
lisa_sig <- lisa %>%
  filter(p_ii < 0.05)
tmap_mode("plot")
tm_shape(lisa) +
  tm_polygons() +
  tm_borders(alpha = 0.5) +
  tm_shape(lisa_sig) +
  tm_fill("mean") +
  tm_borders(alpha = 0.4) 
```

## computing local Moran's I
```{r}
HCSA <- wm_q %>%
  mutate(local_Gi = local_gstar_perm(
    GDPPC, nb, nsim = 99),
      .before = 1) %>%
  unnest(local_Gi)
HCSA
```

##visualing Gi*
```{r}
tmap_mode("plot")
tm_shape(HCSA) +
  tm_fill("gi_star") +
  tm_borders(alpha = 0.5) 
```

### visualising p-value of HCSA
```{r}
tmap_mode("plot")
tm_shape(HCSA) +
  tm_fill("p_sim") +
  tm_borders(alpha = 0.5)
```



